// <auto-generated />
using System;
using D_APP_Infrastructure.SqlServer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace D_APP_Infrastructure.Migrations
{
    [DbContext(typeof(DAppContext))]
    [Migration("20240718122502_DBInit")]
    partial class DBInit
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("D_APP_Core.Entities.Document", b =>
                {
                    b.Property<Guid>("DocId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DocAuthor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocCont")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DocCreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DocFolderId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DocModifiDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DocStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte?>("DocType")
                        .HasColumnType("tinyint");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("DocId");

                    b.HasIndex("UserId");

                    b.ToTable("Documents");
                });

            modelBuilder.Entity("D_APP_Core.Entities.User", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UserCreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UserDateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserFname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserLname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UserModifiDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserPassword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserPhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte?>("UserRole")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("UserStatus")
                        .HasColumnType("tinyint");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("D_APP_Core.Entities.Document", b =>
                {
                    b.HasOne("D_APP_Core.Entities.User", null)
                        .WithMany("Documents")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("D_APP_Core.Entities.User", b =>
                {
                    b.Navigation("Documents");
                });
#pragma warning restore 612, 618
        }
    }
}
